from PIL import Image, ImageDraw, ImageFont

def generate_arrow(policy_term, unit_width=50, height=100):
    # Calculate dynamic width
    width = policy_term * unit_width
    arrow_height = height
    arrow_thickness = 20
    margin = 20

    # Create image
    img = Image.new("RGB", (width + 2 * margin, arrow_height + 2 * margin), "white")
    draw = ImageDraw.Draw(img)

    # Coordinates
    y_center = arrow_height // 2 + margin
    left = margin
    right = width + margin

    # Draw shaft of the arrow
    draw.line([(left + 20, y_center), (right - 20, y_center)], fill="black", width=arrow_thickness)

    # Draw left arrowhead
    draw.polygon([
        (left, y_center),
        (left + 20, y_center - 10),
        (left + 20, y_center + 10)
    ], fill="black")

    # Draw right arrowhead
    draw.polygon([
        (right, y_center),
        (right - 20, y_center - 10),
        (right - 20, y_center + 10)
    ], fill="black")

    # Draw tick marks and numbers
    font = ImageFont.load_default()
    for i in range(1, policy_term + 1):
        x = margin + i * unit_width - unit_width // 2
        draw.line([(x, y_center - 15), (x, y_center + 15)], fill="gray", width=2)
        draw.text((x - 5, y_center + 20), str(i), fill="black", font=font)

    return img

# Example usage
img = generate_arrow(policy_term=20)
img.show()
